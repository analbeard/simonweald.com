// def greenColor = "#00FF00"
// def yellowColor = "#FFFF00"
// def redColor = "#f44242"

// def buildNotify(buildStatus) {
//     // build status of null means successful
//     buildStatus =  buildStatus ?: 'SUCCESSFUL'

//     // Override default values based on build status
//     if (buildStatus == 'STARTED') {
//       colorCode = yellowColor
//     } else if (buildStatus == 'SUCCESSFUL') {
//       colorCode = greenColor
//     } else {
//       colorCode = redColor
//     }
//     slackSend (color: colorCode, message: "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
// }

pipeline {
    agent any

    // currentBuild.result = "SUCCESS"

    environment {
        REGISTRY_CREDENTIALS = credentials('registry-analbeard-com')
        REGISTRY_URL  = 'registry.analbeard.com'
    }

    stages {
        stage ("Collect static files with Hugo") {
            steps {
                sh 'cd site'
                sh 'hugo'
            }
        }
        stage ("Packer build") {
            environment {
                SHORT_COMMIT = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
            }
            steps {
                sh 'packer build build.json'
            }
        }
        stage ("Run tests with Goss") {
            environment {
                SHORT_COMMIT = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
            }
            steps {
                sh 'dgoss run registry.analbeard.com/website/simonweald:$SHORT_COMMIT'
            }
        }
    }

}
